{"version":3,"sources":["QuoteApp.js","App.js","reportWebVitals.js","index.js"],"names":["QuoteApp","id","className","style","width","color","fontSize","marginRight","marginLeft","fontStyle","letterSpacing","type","onClick","randNum","Math","random","strNum","String","charAt","numStr","Number","console","log","axios","get","timeout","then","res","document","getElementById","innerText","data","text","author","catch","err","error","border","marginTop","padding","href","quote","setAttribute","encodeURIComponent","target","App","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"yOAoFeA,EAjFE,WAwCb,OACI,sBAAKC,GAAG,YAAYC,UAAU,qFAAqFC,MAAO,CACtHC,MAAO,SADX,UAII,oBAAGH,GAAG,OAAOE,MAAO,CAChBE,MAAO,oBACPC,SAAU,OACVF,MAAO,QAHX,UAII,mBAAGF,UAAU,mCAAmCC,MAAO,CACvDG,SAAU,OACVC,YAAa,UANjB,6GAOiH,mBAAGL,UAAU,oCAAoCC,MAAO,CACrKG,SAAU,OACVE,WAAY,aAEhB,mBAAGP,GAAG,SAASE,MAAO,CAClBM,UAAW,SACXL,MAAO,OACPE,SAAU,OACVI,cAAe,QAJnB,4BAOA,sBAAKR,UAAU,mDAAf,UACI,wBAAQA,UAAU,iDAAiDD,GAAG,YAAYU,KAAK,SAASC,QA7D3F,WAIb,IAAIC,EAA2B,GAAhBC,KAAKC,SAGhBC,EAASC,OAAOJ,GAASK,OAAO,GAGhCC,EAASC,OAAOJ,GAEpBK,QAAQC,IAAIH,GAEZI,IACKC,IAAI,8BAA+B,CAChCC,QAAS,MAGZC,MAAK,SAAAC,GACFC,SAASC,eAAe,QAAQC,UAAYH,EAAII,KAAKZ,GAAQa,KAC7DJ,SAASC,eAAe,UAAUC,UAAYH,EAAII,KAAKZ,GAAQc,OAC/DZ,QAAQC,IAAIK,EAAII,SAEnBG,OAAM,SAAAC,GAAG,OAAId,QAAQe,MAAMD,OAqC2FhC,MAAO,CACtHkC,OAAQ,IACRC,UAAW,OACXC,QAAS,YAHb,uBAMA,mBAAGC,KAAK,IAAIvC,GAAG,cAAcW,QAxCtB,WACf,IAAM6B,EAAQb,SAASC,eAAe,QAAQC,UACxCG,EAASL,SAASC,eAAe,UAAUC,UAGjDF,SAASC,eAAe,eAAea,aAAa,OAAQ,8EAAgFC,mBAAmB,IAAMF,EAAQ,KAAOR,KAmC1HW,OAAO,SAAzD,SACI,mBAAG1C,UAAU,gCAAgCC,MAAO,CAChDG,SAAU,OACVE,WAAY,mBCzDrBqC,MAhBf,WACE,OAEE,wBAAQ3C,UAAU,8DAChBC,MAAO,CACL2C,gBAAiB,4BACjBC,eAAgB,QAChBC,iBAAkB,YAClBC,mBAAoB,UALxB,SAOC,cAAC,EAAD,OCDUC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhC,SAASC,eAAe,SAM1BqB,M","file":"static/js/main.304a7d1c.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios'\r\n\r\nconst QuoteApp = () => {\r\n\r\n    // Function to get Quote with axios\r\n    const newQuote = () => {\r\n\r\n        // Getting a number with Javascript returns a decimal 0.number, multiplying with ten gives you a number\r\n\r\n        var randNum = (Math.random() * 10);\r\n\r\n        // convert number to a string, then extract the first digit\r\n        var strNum = String(randNum).charAt(0);\r\n\r\n        // convert the first digit back to an integer\r\n        var numStr = Number(strNum);\r\n\r\n        console.log(numStr)\r\n\r\n        axios\r\n            .get('https://type.fit/api/quotes', {\r\n                timeout: 5000\r\n            })\r\n            // .then(res => showOutput(res))\r\n            .then(res => {\r\n                document.getElementById('text').innerText = res.data[numStr].text\r\n                document.getElementById('author').innerText = res.data[numStr].author\r\n                console.log(res.data)\r\n            })\r\n            .catch(err => console.error(err));\r\n    }\r\n\r\n    const tweetQuote = () => {\r\n        const quote = document.getElementById('text').innerText\r\n        const author = document.getElementById('author').innerText\r\n\r\n\r\n        document.getElementById('tweet-quote').setAttribute('href', 'https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=' + encodeURIComponent('\"' + quote + '\" ' + author)\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <div id=\"quote-box\" className=\"container d-flex flex-column align-items-start justify-content-center text-justify\" style={{\r\n            width: '300px',\r\n        }}>\r\n\r\n            <p id=\"text\" style={{\r\n                color: \" rgb(254,254,254)\",\r\n                fontSize: '29px',\r\n                width: 'auto'\r\n            }} ><i className=\"fa fa-quote-left text-white mt-3\" style={{\r\n                fontSize: '15px',\r\n                marginRight: '10px',\r\n            }}></i>You don't get to choose if you get hurt in this world, old man, but you do have some say in who hurts you.<i className=\"fa fa-quote-right text-white mt-3\" style={{\r\n                fontSize: '15px',\r\n                marginLeft: '10px',\r\n            }}></i></p>\r\n            <p id=\"author\" style={{\r\n                fontStyle: 'italic',\r\n                width: 'auto',\r\n                fontSize: '20px',\r\n                letterSpacing: '.9px'\r\n            }}> - John Green </p>\r\n\r\n            <div className=\"d-flex align-items-center justify-content-center\">\r\n                <button className=\"btn btn-primary bg-white border-none text-dark\" id=\"new-quote\" type=\"button\" onClick={newQuote} style={{\r\n                    border: '0',\r\n                    marginTop: '10px',\r\n                    padding: 'auto 3px'\r\n                }}>NEW QUOTE</button>\r\n\r\n                <a href=\"#\" id=\"tweet-quote\" onClick={tweetQuote} target=\"_blank\">\r\n                    <i className=\"fa fa-twitter text-white mt-3\" style={{\r\n                        fontSize: '20px',\r\n                        marginLeft: '20px'\r\n                    }}></i>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuoteApp;","import './App.css';\nimport QuoteApp from './QuoteApp';\n\nfunction App() {\n  return (\n\n    <header className=\"App-header d-flex align-items-center justify-content-center\"\n      style={{\n        backgroundImage: \"url('/bg/bg-desktop.jpg')\",\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center'\n      }}>\n     <QuoteApp/>\n    </header>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}